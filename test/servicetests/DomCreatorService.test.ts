/* eslint-disable max-len */

import { DomAttributeValue } from "./../../main/util/DomAttributeValue.class";
import { DomTree } from "./../../main/util/DomTree.class";
import { DomCreatorServiceImpl } from "./../../main/services/implementation/DomCreator.serviceimpl";
import { DomCreatorService } from "../../main/services/abstract/DomCreator.service";
import { DomObject } from "../../main/util/DomObject.class";

describe("DomCreatorService tests", () => {
    it("Should svg by parsed properly by DomCreatorService", () => {
        const svgToParseString = 
            `<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"mdi-account\" viewBox=\"0 0 24 24\">
                <path d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\" /></svg>`;
        const expectedDOMTree = 
            new DomTree([
                new DomObject("svg", {viewBox: new DomAttributeValue("0 0 24 24", "STRING"), id: new DomAttributeValue("mdi-account", "STRING"), xmlns: new DomAttributeValue("http://www.w3.org/2000/svg", "STRING")}), 
                new DomObject("path", 
                    {d: new DomAttributeValue("M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z", "STRING")}
                )]);


        const domCreatorService: DomCreatorService = new DomCreatorServiceImpl();
        const domTree = domCreatorService.parseAndCreateDomTree(svgToParseString);

        expect(domTree).toStrictEqual(expectedDOMTree);
    });

    it("Should other svg by parsed properly by DomCreatorService", () => {
        const svgToParseString = 
            "<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"mdi-safe-square\" viewBox=\"0 0 24 24\"><path d=\"M20 2C21.1 2 22 2.9 22 4V20C22 21.1 21.1 22 20 22H19V23H15V22H9V23H5V22H4C2.9 22 2 21.1 2 20V4C2 2.9 2.9 2 4 2H20M17 12C17 11 16.7 10 16.2 9.2L17.7 7.7L16.3 6.3L14.8 7.8C14 7.3 13 7 12 7C11 7 10 7.3 9.2 7.8L7.8 6.3L6.3 7.8L7.8 9.3C7.3 10 7 11 7 12C7 13 7.3 14 7.8 14.8L6.3 16.3L7.8 17.7L9.3 16.2C10 16.7 11 17 12 17C13 17 14 16.7 14.8 16.2L16.3 17.7L17.7 16.3L16.2 14.8C16.7 14 17 13 17 12M12 9C13.7 9 15 10.3 15 12C15 13.7 13.7 15 12 15C10.3 15 9 13.7 9 12C9 10.3 10.3 9 12 9M12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14Z\" /></svg>";
        const expectedDOMTree = 
            new DomTree([
                new DomObject("svg", {viewBox: new DomAttributeValue("0 0 24 24", "STRING"), id: new DomAttributeValue("mdi-safe-square", "STRING"), xmlns: new DomAttributeValue("http://www.w3.org/2000/svg", "STRING")}), 
                new DomObject("path", 
                    {d: new DomAttributeValue("M20 2C21.1 2 22 2.9 22 4V20C22 21.1 21.1 22 20 22H19V23H15V22H9V23H5V22H4C2.9 22 2 21.1 2 20V4C2 2.9 2.9 2 4 2H20M17 12C17 11 16.7 10 16.2 9.2L17.7 7.7L16.3 6.3L14.8 7.8C14 7.3 13 7 12 7C11 7 10 7.3 9.2 7.8L7.8 6.3L6.3 7.8L7.8 9.3C7.3 10 7 11 7 12C7 13 7.3 14 7.8 14.8L6.3 16.3L7.8 17.7L9.3 16.2C10 16.7 11 17 12 17C13 17 14 16.7 14.8 16.2L16.3 17.7L17.7 16.3L16.2 14.8C16.7 14 17 13 17 12M12 9C13.7 9 15 10.3 15 12C15 13.7 13.7 15 12 15C10.3 15 9 13.7 9 12C9 10.3 10.3 9 12 9M12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14Z", "STRING")}
                )]);


        const domCreatorService: DomCreatorService = new DomCreatorServiceImpl();
        const domTree = domCreatorService.parseAndCreateDomTree(svgToParseString);

        expect(domTree).toStrictEqual(expectedDOMTree);
    });


    it("Should single html element be parsed properly by DomCreatorService", () => {
        const toParseString = "<div class=\"testClass\" id=\"testId\" width=\"2\"></div>";
        const expectedDOMTree = new DomTree([
            new DomObject("DIV", {
                class: new DomAttributeValue("testClass", "STRING"),
                id: new DomAttributeValue("testId", "STRING"),
                width: new DomAttributeValue(2, "NUMBER")
            })
        ]);

        const domCreatorService: DomCreatorService = new DomCreatorServiceImpl();
        const domTree = domCreatorService.parseAndCreateDomTree(toParseString);

        expect(domTree).toStrictEqual(expectedDOMTree);
    });

    it("Should broken html cause empty DomTree generated by DomCreatorService", () => {
        const toParseString = "div class=\"testClass\" dfgfb bfdbdfdfff id=\"testId\" width=\"2\"sd</div>";
        const expectedDOMTree = new DomTree([]);

        const domCreatorService: DomCreatorService = new DomCreatorServiceImpl();
        const domTree = domCreatorService.parseAndCreateDomTree(toParseString);

        expect(domTree).toStrictEqual(expectedDOMTree);
    } );

    it("Should empty html cause empty DomTree generated by DomCreatorService", () => {
        const toParseString = "";
        const expectedDOMTree = new DomTree([]);

        const domCreatorService: DomCreatorService = new DomCreatorServiceImpl();
        const domTree = domCreatorService.parseAndCreateDomTree(toParseString);

        expect(domTree).toStrictEqual(expectedDOMTree);
    } );
});
